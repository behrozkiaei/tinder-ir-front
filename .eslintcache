[{"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js":"1","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js":"2","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorkerRegistration.js":"3","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js":"4","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js":"5","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js":"6","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js":"7","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js":"8","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js":"9","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js":"10","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js":"11","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\setting\\Setting.js":"12","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js":"13","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js":"14","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js":"15","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js":"16","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\profile\\EditPro.js":"17","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js":"18","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\user.js":"19","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js":"20","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js":"21","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js":"22","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\firebase.js":"23","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.jsx":"24","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.jsx":"25"},{"size":1313,"mtime":1634294903740,"results":"26","hashOfConfig":"27"},{"size":638,"mtime":1631899569363,"results":"28","hashOfConfig":"27"},{"size":5201,"mtime":1632514216381,"results":"29","hashOfConfig":"27"},{"size":377,"mtime":1632514216380,"results":"30","hashOfConfig":"27"},{"size":1489,"mtime":1631899569362,"results":"31","hashOfConfig":"27"},{"size":1595,"mtime":1634295104153,"results":"32","hashOfConfig":"27"},{"size":1377,"mtime":1634297079828,"results":"33","hashOfConfig":"27"},{"size":850,"mtime":1634292871204,"results":"34","hashOfConfig":"27"},{"size":867,"mtime":1634291904566,"results":"35","hashOfConfig":"27"},{"size":2658,"mtime":1631081410814,"results":"36","hashOfConfig":"27"},{"size":1908,"mtime":1631081410812,"results":"37","hashOfConfig":"27"},{"size":617,"mtime":1632514216376,"results":"38","hashOfConfig":"27"},{"size":3287,"mtime":1631081410813,"results":"39","hashOfConfig":"27"},{"size":1936,"mtime":1634285001619,"results":"40","hashOfConfig":"27"},{"size":4333,"mtime":1632514216371,"results":"41","hashOfConfig":"27"},{"size":6127,"mtime":1632514216374,"results":"42","hashOfConfig":"27"},{"size":2782,"mtime":1632514216372,"results":"43","hashOfConfig":"27"},{"size":30758,"mtime":1634297687478,"results":"44","hashOfConfig":"27"},{"size":622,"mtime":1632514216382,"results":"45","hashOfConfig":"27"},{"size":2192,"mtime":1634298712961,"results":"46","hashOfConfig":"27"},{"size":1296,"mtime":1634290442279,"results":"47","hashOfConfig":"27"},{"size":4724,"mtime":1634296989847,"results":"48","hashOfConfig":"27"},{"size":901,"mtime":1634021461242,"results":"49","hashOfConfig":"27"},{"size":3317,"mtime":1634297470951,"results":"50","hashOfConfig":"27"},{"size":3648,"mtime":1634295069135,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t3vsg3",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js",[],["110","111"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorkerRegistration.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js",["112","113","114","115","116","117"],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Main.css\";\r\nimport Header from \"./Header\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport SwipeButtons from \"./subMain/SwipeButtons\"\r\nimport TinderCards from \"./subMain/TinderCards\"\r\n\r\n\r\nconst Main = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector(state => state.Auth.user);\r\n  useEffect(() => {\r\n\r\n    if (!Auth?.user) {\r\n      dispatch({\r\n        type: \"LOGOUT\"\r\n      })\r\n      window.location.reload();\r\n    }\r\n  }, [])\r\n\r\n\r\n  return error ? (<\r\n    span className=\"error-message\" > {\r\n      error\r\n    } </span>\r\n  ) : (<div > {\r\n    <>\r\n      <Header />\r\n      <TinderCards />\r\n\r\n    </>\r\n  } </div>\r\n  );\r\n};\r\n\r\nexport default Main;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\setting\\Setting.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js",["118","119"],"import { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Header from \"../screens/Header\";\r\nimport \"./ConversationList.css\"\r\nconst Conversation = () => {\r\n\r\n    const $conversations = useSelector(state => state.Chat.conversations);\r\n    const [conversations, setConversations] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log($conversations)\r\n        setConversations($conversations)\r\n    }, [$conversations])\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"conversations\">\r\n                {/* <div className=\"matchBox\">\r\n                    {\r\n                        [0, 3, 5, 8, 9, 1, 2].map((a, i) => (\r\n                            <div className=\"machedAvatar\" key={i}>\r\n                                <img src=\"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"></img>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div> */}\r\n\r\n                <div className=\"chatConvContainer\">\r\n\r\n                    {conversations?.map((c, id) => (\r\n                        <div key={id}>\r\n                            <Link to={`/chat/${c._id}`} className=\"messageBox\">\r\n                                <div className=\"avatar\">\r\n                                    <img src={c.userToInfo?.avatar || \"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"} alt=\"avatar\" />\r\n                                </div>\r\n                                <div className=\"convBox\">\r\n                                    <h3>{c.userToInfo.username}</h3>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Conversation;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js",["120","121","122","123","124","125"],"import React from 'react'\r\n\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Header from '../screens/Header';\r\nimport \"./Message.scss\";\r\nimport { getAllmessages } from \"../../services/user\"\r\nfunction Message() {\r\n\r\n    const defaultImg = \"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\";\r\n    let { conversation_id } = useParams();\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n    //red store messages conv and user \r\n    const user = useSelector(Store => Store.Auth.user)\r\n    const $messages = useSelector(State => State.Chat?.message)\r\n    const $conv = useSelector(State => State.Chat.conversations?.filter(d => d._id === conversation_id)[0])\r\n    const dispatch = useDispatch();\r\n    const [messages, setMessage] = useState([])\r\n    const [tempMessage, setTempMessage] = useState(null)\r\n    const [user_to, setUser_to] = useState([])\r\n\r\n    useEffect(() => {\r\n        setUser_to($conv?.conversation_between?.filter(d => d !== user?.user._id)[0] || null)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const setMessagesRead = async () => {\r\n            //update status\r\n            axios.post(\"api/chat/updateMessageToRead\", {\r\n                conversation_id: conversation_id\r\n            }).then(() => {\r\n\r\n                //refresh messagess\r\n                getAllmessages(dispatch)\r\n            })\r\n        }\r\n        $messages.some(d => {\r\n\r\n            if (d.status === \"UNREAD\" && d.user_to === user.user._id) {\r\n                setMessagesRead()\r\n                return true;\r\n            }\r\n            return false\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setMessage($messages?.filter(d => d.conversation_id === conversation_id) || [])\r\n\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [$messages])\r\n\r\n    useEffect(() => {\r\n        console.log(\"new message added to store from other user\")\r\n\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages])\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (!tempMessage)\r\n            return false;\r\n\r\n        axios.post(\"/api/chat/sendMessage\", {\r\n            conversation_id: $conv._id,\r\n            user_to: user_to,\r\n            message: tempMessage,\r\n            status: \"UNREAD\"\r\n        }).then((res) => {\r\n\r\n            console.log(res.data.data)\r\n            //push that message in to the store chat\r\n            dispatch({ type: \"ADD_MESSAGE\", payload: res.data.data })\r\n            setTempMessage('')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"chatContainder\">\r\n                <div className=\"MessegesContainer\" > {\r\n\r\n                    messages.map((d, i) => (\r\n\r\n\r\n\r\n                        <div key={d._id} className={\"messageBox \" + ((d.user_to && d.user_to !== user.user._id) ? \"rtlChat\" : \"\")}>\r\n\r\n                            <div className=\"avatar\" >\r\n                                {d.user_to !== messages[i - 1]?.user_to &&\r\n                                    <img src={\r\n                                        (((d.user_to && d.user_to !== user.user._id) ? (user.user.avatar || defaultImg) : ($conv.userToInfo.avatar || defaultImg)))} alt=\"avatar\" />\r\n\r\n                                }\r\n                            </div>\r\n                            <div className=\"convBox\">\r\n                                <p className={((d.user_to && d.user_to !== user.user._id) ? \"recieved\" : \"sent\")}>{d.message}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ))}\r\n                    <div ref={scrollRef} />\r\n                </div>\r\n                <div className=\"textInputBox\">\r\n                    < form onSubmit={(e) => submitForm(e)} className=\"chat-form\">\r\n                        < input value={tempMessage || \"\"} className=\"chat-input\"\r\n                            onChange={(e) => { setTempMessage(e.target.value) }} />\r\n                        < input type=\"submit\" className=\"chat-button\" value=\"Submit\" /> </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js",["126","127","128"],"import \"./css/Profile.css\"\r\nimport Header from \"./Header\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport {\r\n    IconButton\r\n} from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport {\r\n    useState,\r\n    useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from \"react-redux\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [avatarLoading, setAvatarLoader] = useState(null)\r\n    const [avatarError, setAvatarError] = useState(null)\r\n    const Auth = useSelector(state => state.Auth.user);\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n    const [images, setImages] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!Auth.user) {\r\n            console.log(\"Auth is undefined\")\r\n        }\r\n\r\n\r\n        setAvatar(Auth?.user?.avatar)\r\n        setImages(Auth?.Images)\r\n    }, [Auth])\r\n\r\n\r\n    useEffect(() => { }, [avatar, images])\r\n    const handleFileInput = async (fileUploaded, type = \"avatar\") => {\r\n        setAvatarLoader(true)\r\n        console.log(fileUploaded)\r\n\r\n        if (fileUploaded.size > 2024000) {\r\n            setAvatarError(\"File size cannot exceed more than 1MB\");\r\n            setAvatarLoader(false)\r\n            return false;\r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", fileUploaded);\r\n        formData.append(\"type\", type);\r\n        axios.post(\"/api/upload\", formData).then((res) => {\r\n            updateUserInfo()\r\n        }).catch(e => {\r\n            setAvatarError(e.response?.data?.error || \"Network Erro\");\r\n            setTimeout(() => {\r\n                setAvatarError(\"\");\r\n            }, 5000);\r\n\r\n        }).finally(() => {\r\n            setAvatarLoader(false)\r\n        });\r\n\r\n    }\r\n\r\n    const updateUserInfo = async () => {\r\n        try {\r\n\r\n            const res = await axios.get(\"/api/tinder/getUserInfo\")\r\n            console.log(res?.data?.data)\r\n            dispatch({\r\n                type: \"LOGIN_SUCCESS\",\r\n                payload: res?.data?.data\r\n            })\r\n\r\n        } catch (errror) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <div className=\"pro-container\" >\r\n            < div className=\"clip\" > </div> {images?.length > 0 &&\r\n                <div className=\"image-slider\" > {\r\n                    images.map((d, id) =>\r\n                        <div className=\"box\" key={id}>\r\n                            <img src={d.image} />\r\n                        </div>)\r\n                } </div>\r\n            }\r\n            <div className=\"avatar-box\" > {avatar &&\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                <img src={\r\n                    avatar\r\n                }\r\n                />\r\n            } {\r\n                    !avatar &&\r\n                    <label htmlFor=\"avatarUplade\" >\r\n                        <PersonIcon className=\"noAvatar\"\r\n                            style={\r\n                                {\r\n                                    fontSize: 100\r\n                                }\r\n                            }\r\n                            color=\"primary\" > </PersonIcon> <EditIcon className=\"edit-avatar\"\r\n                                color=\"secondary\" >\r\n                        </EditIcon>\r\n                    </label>\r\n\r\n                } <p color=\"secondary\" > Behroooz </p> <form >\r\n                    < input type=\"file\"\r\n                        className=\"upload-avatar\"\r\n                        id=\"avatarUplade\"\r\n                        onChange={\r\n                            (e) => handleFileInput(e.target.files[0], \"avatar\")\r\n                        }\r\n                    /> </form> </div>\r\n            <div className=\"info\" >\r\n                <div className=\"edit\" >\r\n                    <Link to=\"/setting\">\r\n                        <IconButton className=\"icon-box\" >\r\n                            <SettingsIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                    <p color=\"secondary\" >Setting</p> </div>\r\n                <div className=\"upload-image\" >\r\n\r\n                    <IconButton className=\"icon-box\"\r\n                        htmlFor=\"imageUpload\" >\r\n                        <label htmlFor=\"imageUpload\"\r\n                            className=\"uplaodBoxHidden\" >\r\n                        </label> <\r\n                            PhotoCameraIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                        /> </IconButton>\r\n                    <p color=\"secondary\" > Upload Image </p>\r\n                    <form >\r\n                        <input type=\"file\"\r\n                            className=\"upload-avatar\"\r\n                            id=\"imageUpload\"\r\n                            onChange={\r\n                                (e) => handleFileInput(e.target.files[0], \"image\")\r\n                            }\r\n                        /> </form>\r\n                </div>\r\n                <div className=\"setting\" >\r\n                    <Link to=\"/editpro\">\r\n                        <IconButton className=\"icon-box\" >\r\n                            <EditIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                            /> </IconButton> <p color=\"secondary\" >Edit Profile</p>\r\n                    </Link>\r\n                </div> </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\profile\\EditPro.js",["129","130","131"],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\"\r\nimport Header from \"../screens/Header\";\r\nimport \"./EditPro.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { getUserInfo } from \"../../services/user.js\"\r\nfunction EditPro() {\r\n    // const [userName, setstate] = useState(initialState)\r\n    //  const dispatch = useDispatch(function)\r\n    //  useEffect(() => {\r\n    //    return () => {\r\n    //      effect\r\n    //    };\r\n    //  }, [input])\r\n\r\n    const Auth = useSelector(state => state.Auth?.user)\r\n\r\n    const [username, setUserName] = useState(Auth.user?.username || \"\")\r\n    const [age, setAge] = useState(Auth.user?.age || \"\")\r\n    const [gender, setGender] = useState(Auth.user?.gender || \"male\")\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoader] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        setLoader(true)\r\n        axios.post(\"/api/tinder/updateUserInfo\", {\r\n            username: username,\r\n            gender: gender,\r\n            age: age,\r\n            email: Auth.user.email\r\n        }).then(res => {\r\n            getUserInfo(dispatch)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        }).finally(() => {\r\n            setLoader(false)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"editPro\">\r\n                <form className=\"box\" onSubmit={submitForm}>\r\n\r\n                    <label htmlFor=\"\">Username:</label>\r\n                    <input className=\"custom\" value={username || \"\"} onChange={(e) => setUserName(e.target.value)} ></input>\r\n                    <label htmlFor=\"\">Sge:</label>\r\n                    <input className=\"custom\" type=\"mobile\" value={age || \"\"} onChange={(e) => setAge(e.target.value)}></input>\r\n                    <label htmlFor=\"\">Gender:</label>\r\n                    <select className=\"custom\" value={gender || \"male\"} onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"male\">male</option>\r\n                        <option value=\"female\">female</option>\r\n                    </select>\r\n                    {/* <input type=\"submit\" className=\"customBtn\" value=\"Submit\" /> */}\r\n\r\n                    <button className=\"customBtn\" type=\"submit\" disabled={loading}>\r\n                        {loading ? (\r\n                            <CircularProgress color=\"secondary\" size=\"20px\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPro\r\n","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js",["132","133"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\user.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js",["134","135"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js",["136","137"],"\r\nimport { IconButton } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './css/SwipeButtons.css'\r\nimport ReplayIcon from '@material-ui/icons/Replay'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn'\r\n\r\nfunction SwipeButtons({ triggerCard }) {\r\n    return (\r\n        <div className='swipeButtons'>\r\n            {/* <IconButton className='swipeButtons__repeat'>\r\n                <ReplayIcon fontSize='large' />\r\n            </IconButton> */}\r\n            <IconButton className='swipeButtons__left' onClick={(e => triggerCard(\"left\"))}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__lightning' onClick={(e => triggerCard(\"right\"))}>\r\n                <FlashOnIcon sx={{ fontSize: 60 }} />\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__right' onClick={(e => triggerCard(\"right\"))}>\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            {/* <IconButton className='swipeButtons__star'>\r\n                <StarIcon fontSize='large' />\r\n            </IconButton> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js",["138","139"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\firebase.js",["140","141","142"],"// Import the functions you need from the SDKs you need\r\n\r\nimport {\r\n    initializeApp\r\n} from \"firebase/app\";\r\n\r\n\r\nimport {\r\n    getMessaging\r\n} from \"firebase/messaging\";\r\nimport {\r\n    onBackgroundMessage\r\n} from \"firebase/messaging/sw\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBxeVrVVWXKCFupPnjszD90Dl-mHVA8-Zo\",\r\n    authDomain: \"tinder-ir.firebaseapp.com\",\r\n    projectId: \"tinder-ir\",\r\n    storageBucket: \"tinder-ir.appspot.com\",\r\n    messagingSenderId: \"834912299201\",\r\n    appId: \"1:834912299201:web:17bfdc4a75ce1b01290c40\",\r\n    measurementId: \"G-XK9LHB51FX\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\n// {\r\n//     \"subject\": \"mailto: <behrozkiaei1@gmail.com>\",\r\n//     \"publicKey\": \"BHcXlIz0DUJl0zelpS5frclinCfZE2mZffMus7jJjIBcF5K_D45iC2Rzz1dW2hi8Dbup4ViymCOgcNCRkLH3Xh0\",\r\n//     \"privateKey\": \"uyPair3gqVt0jCwJc3c2yTFQ2-6wLyryZtvDZR4aC-Q\"\r\n// }","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.jsx",["143"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.jsx",["144","145","146","147","148","149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":20},{"ruleId":"155","severity":1,"message":"160","line":14,"column":17,"nodeType":"157","messageId":"158","endLine":14,"endColumn":25},{"ruleId":"155","severity":1,"message":"161","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":21},{"ruleId":"155","severity":1,"message":"162","line":15,"column":23,"nodeType":"157","messageId":"158","endLine":15,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":26,"column":6,"nodeType":"165","endLine":26,"endColumn":8,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"168","line":6,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":14},{"ruleId":"155","severity":1,"message":"169","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":12},{"ruleId":"155","severity":1,"message":"170","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":14},{"ruleId":"155","severity":1,"message":"171","line":15,"column":11,"nodeType":"157","messageId":"158","endLine":15,"endColumn":17},{"ruleId":"163","severity":1,"message":"172","line":28,"column":8,"nodeType":"165","endLine":28,"endColumn":10,"suggestions":"173"},{"ruleId":"163","severity":1,"message":"174","line":49,"column":8,"nodeType":"165","endLine":49,"endColumn":10,"suggestions":"175"},{"ruleId":"163","severity":1,"message":"176","line":54,"column":8,"nodeType":"165","endLine":54,"endColumn":19,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"178","line":24,"column":12,"nodeType":"157","messageId":"158","endLine":24,"endColumn":25},{"ruleId":"155","severity":1,"message":"179","line":25,"column":12,"nodeType":"157","messageId":"158","endLine":25,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":96,"column":29,"nodeType":"182","endLine":96,"endColumn":50},{"ruleId":"155","severity":1,"message":"183","line":2,"column":20,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"155","severity":1,"message":"184","line":26,"column":12,"nodeType":"157","messageId":"158","endLine":26,"endColumn":17},{"ruleId":"155","severity":1,"message":"160","line":26,"column":19,"nodeType":"157","messageId":"158","endLine":26,"endColumn":27},{"ruleId":"163","severity":1,"message":"185","line":72,"column":8,"nodeType":"165","endLine":72,"endColumn":10,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"187","line":148,"column":8,"nodeType":"165","endLine":148,"endColumn":10,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"167","line":8,"column":23,"nodeType":"157","messageId":"158","endLine":8,"endColumn":34},{"ruleId":"163","severity":1,"message":"189","line":30,"column":8,"nodeType":"165","endLine":30,"endColumn":19,"suggestions":"190"},{"ruleId":"155","severity":1,"message":"191","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":18},{"ruleId":"155","severity":1,"message":"192","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":16},{"ruleId":"155","severity":1,"message":"193","line":4,"column":5,"nodeType":"157","messageId":"158","endLine":4,"endColumn":11},{"ruleId":"163","severity":1,"message":"194","line":18,"column":97,"nodeType":"165","endLine":18,"endColumn":99,"suggestions":"195"},{"ruleId":"155","severity":1,"message":"196","line":9,"column":5,"nodeType":"157","messageId":"158","endLine":9,"endColumn":17},{"ruleId":"155","severity":1,"message":"197","line":12,"column":5,"nodeType":"157","messageId":"158","endLine":12,"endColumn":24},{"ruleId":"155","severity":1,"message":"198","line":26,"column":7,"nodeType":"157","messageId":"158","endLine":26,"endColumn":10},{"ruleId":"155","severity":1,"message":"183","line":3,"column":3,"nodeType":"157","messageId":"158","endLine":3,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"199","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":22},{"ruleId":"155","severity":1,"message":"193","line":26,"column":5,"nodeType":"157","messageId":"158","endLine":26,"endColumn":11},{"ruleId":"155","severity":1,"message":"183","line":28,"column":5,"nodeType":"157","messageId":"158","endLine":28,"endColumn":14},{"ruleId":"155","severity":1,"message":"169","line":31,"column":5,"nodeType":"157","messageId":"158","endLine":31,"endColumn":7},{"ruleId":"155","severity":1,"message":"200","line":39,"column":5,"nodeType":"157","messageId":"158","endLine":39,"endColumn":9},{"ruleId":"155","severity":1,"message":"201","line":43,"column":8,"nodeType":"157","messageId":"158","endLine":43,"endColumn":16},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'SwipeButtons' is defined but never used.","'setError' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Auth?.user' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'useDispatch' is defined but never used.","'useParams' is defined but never used.","'io' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","React Hook useEffect has missing dependencies: '$conv?.conversation_between' and 'user?.user._id'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: '$messages', 'conversation_id', 'dispatch', and 'user.user._id'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'conversation_id'. Either include it or remove the dependency array.",["207"],"'avatarLoading' is assigned a value but never used.","'avatarError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Auth.user?.username'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'Auth?.user._id', 'dispatch', and 'history'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'user.user._id'. Either include it or remove the dependency array.",["210"],"'ReplayIcon' is defined but never used.","'StarIcon' is defined but never used.","'useRef' is defined but never used.","React Hook useMemo has a missing dependency: 'people?.length'. Either include it or remove the dependency array.",["211"],"'getMessaging' is defined but never used.","'onBackgroundMessage' is defined but never used.","'app' is assigned a value but never used.","'RegisterScreen' is defined but never used.","'Chat' is defined but never used.","'Settings' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [Auth?.user, dispatch]",{"range":"228","text":"229"},"Update the dependencies array to be: [$conv?.conversation_between, user?.user._id]",{"range":"230","text":"231"},"Update the dependencies array to be: [$messages, conversation_id, dispatch, user.user._id]",{"range":"232","text":"233"},"Update the dependencies array to be: [$messages, conversation_id]",{"range":"234","text":"235"},"Update the dependencies array to be: [Auth.user?.username]",{"range":"236","text":"237"},"Update the dependencies array to be: [Auth?.user._id, dispatch, history]",{"range":"238","text":"239"},"Update the dependencies array to be: [$messages, user.user._id]",{"range":"240","text":"241"},"Update the dependencies array to be: [people?.length]",{"range":"242","text":"243"},[648,650],"[Auth?.user, dispatch]",[1191,1193],"[$conv?.conversation_between, user?.user._id]",[1773,1775],"[$messages, conversation_id, dispatch, user.user._id]",[1967,1978],"[$messages, conversation_id]",[2012,2014],"[Auth.user?.username]",[4142,4144],"[Auth?.user._id, dispatch, history]",[1082,1093],"[$messages, user.user._id]",[600,602],"[people?.length]"]