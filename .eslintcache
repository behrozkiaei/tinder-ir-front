[{"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js":"1","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js":"2","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.js":"3","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js":"4","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\routing\\PrivateRoute.js":"5","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js":"6","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js":"7","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js":"8","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js":"9","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js":"10","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js":"11","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js":"12","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js":"13","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.js":"14","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js":"15","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js":"16","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js":"17","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js":"18","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js":"19","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js":"20","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js":"21"},{"size":991,"mtime":1631626744690,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1631081410814,"results":"24","hashOfConfig":"23"},{"size":2555,"mtime":1631883168423,"results":"25","hashOfConfig":"23"},{"size":638,"mtime":1631894804726,"results":"26","hashOfConfig":"23"},{"size":389,"mtime":1631081410811,"results":"27","hashOfConfig":"23"},{"size":2658,"mtime":1631081410814,"results":"28","hashOfConfig":"23"},{"size":5784,"mtime":1631882183612,"results":"29","hashOfConfig":"23"},{"size":1225,"mtime":1631806307359,"results":"30","hashOfConfig":"23"},{"size":1908,"mtime":1631081410812,"results":"31","hashOfConfig":"23"},{"size":3287,"mtime":1631081410813,"results":"32","hashOfConfig":"23"},{"size":1471,"mtime":1631877432824,"results":"33","hashOfConfig":"23"},{"size":670,"mtime":1631642027980,"results":"34","hashOfConfig":"23"},{"size":1489,"mtime":1631883426930,"results":"35","hashOfConfig":"23"},{"size":2638,"mtime":1631880306139,"results":"36","hashOfConfig":"23"},{"size":1924,"mtime":1631886666923,"results":"37","hashOfConfig":"23"},{"size":3353,"mtime":1631891454310,"results":"38","hashOfConfig":"23"},{"size":1295,"mtime":1631806307347,"results":"39","hashOfConfig":"23"},{"size":2271,"mtime":1631899424625,"results":"40","hashOfConfig":"23"},{"size":1197,"mtime":1631897007321,"results":"41","hashOfConfig":"23"},{"size":29479,"mtime":1631895202895,"results":"42","hashOfConfig":"23"},{"size":549,"mtime":1631895086855,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ya3quj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js",[],["94","95"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.js",["96","97","98","99","100","101"],"import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// Routing\r\n\r\n\r\n// Screens\r\nimport Main from \"./components/screens/Main\";\r\nimport LoginScreen from \"./components/screens/LoginScreen\";\r\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\r\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\r\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\r\nimport Profile from \"./components/screens/Profile\"\r\nimport interceptor from \"./interceptor/interceptor\";\r\nimport Message from \"./components/chat/Message\"\r\nimport Conversation from \"./components/chat/ConversationList\"\r\n\r\n\r\nimport {\r\n  useHistory\r\n} from \"react-router\"\r\nimport {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport {\r\n  io\r\n} from \"socket.io-client\";\r\n\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from \"react-redux\";\r\nimport {\r\n  Chat\r\n} from \"@material-ui/icons\";\r\nimport SplashScreen from \"./components/splash/SplashScreen\";\r\n\r\nconst App = () => {\r\n\r\n  const Auth = useSelector(state => state.Auth.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [token] = useState(localStorage.getItem(\"authToken\"))\r\n\r\n  interceptor(history, dispatch);\r\n\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <div className=\"app\" >\r\n        <Switch >\r\n          <Route exact path=\"/\" > {\r\n            (Auth) ? < Main /> : < LoginScreen />}\r\n          </Route>\r\n\r\n          <Route exact path=\"/splash\">\r\n            < SplashScreen />\r\n          </Route>\r\n\r\n          <Route exact path=\"/conversations\" > {\r\n            (Auth) ? < Conversation /> : < LoginScreen />}\r\n          </Route>\r\n          <Route exact path=\"/chat/:conversation_id\" > {\r\n            (Auth) ? < Message /> : < LoginScreen />}\r\n          </Route>\r\n          <Route exact path=\"/profile\" > {\r\n            (Auth) ? < Profile /> : < LoginScreen />}\r\n          </Route>\r\n\r\n          <Route exact path=\"/login\" > {\r\n            (token) ? < SplashScreen /> : < LoginScreen />}\r\n          </Route>\r\n\r\n\r\n          <Route exact path=\"/register\" > {\r\n            (Auth) ? < Main /> : < LoginScreen />\r\n          }\r\n          </Route>\r\n\r\n          <Route exact path=\"/forgotpassword\"\r\n            component={\r\n              ForgotPasswordScreen\r\n            }\r\n          />\r\n          <Route exact path=\"/passwordreset/:resetToken\"\r\n            component={\r\n              ResetPasswordScreen\r\n            }\r\n          />\r\n        </Switch > </div> </Router >\r\n  );\r\n};\r\n\r\nexport default App;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\routing\\PrivateRoute.js",[],["102","103"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js",["104","105","106"],"import \"./css/Profile.css\"\r\nimport Header from \"./Header\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport {\r\n    IconButton\r\n} from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport {\r\n    useState,\r\n    useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from \"react-redux\"\r\n\r\nfunction Profile() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [avatarLoading, setAvatarLoader] = useState(null)\r\n    const [avatarError, setAvatarError] = useState(null)\r\n    const Auth = useSelector(state => state.Auth.user);\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n    const [images, setImages] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        setAvatar(Auth.user.avatar)\r\n        setImages(Auth.Images)\r\n    }, [Auth])\r\n\r\n\r\n    useEffect(() => { }, [avatar, images])\r\n    const handleFileInput = async (fileUploaded, type = \"avatar\") => {\r\n        setAvatarLoader(true)\r\n        console.log(fileUploaded)\r\n\r\n        if (fileUploaded.size > 2024000) {\r\n            setAvatarError(\"File size cannot exceed more than 1MB\");\r\n            setAvatarLoader(false)\r\n            return false;\r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", fileUploaded);\r\n        formData.append(\"type\", type);\r\n        axios.post(\"/api/upload\", formData).then((res) => {\r\n            updateUserInfo()\r\n        }).catch(e => {\r\n            setAvatarError(e.response?.data?.error || \"Network Erro\");\r\n            setTimeout(() => {\r\n                setAvatarError(\"\");\r\n            }, 5000);\r\n\r\n        }).finally(() => {\r\n            setAvatarLoader(false)\r\n        });\r\n\r\n    }\r\n\r\n    const updateUserInfo = async () => {\r\n        try {\r\n\r\n            const res = await axios.get(\"/api/tinder/getUserInfo\")\r\n            console.log(res?.data?.data)\r\n            dispatch({\r\n                type: \"LOGIN_SUCCESS\",\r\n                payload: res?.data?.data\r\n            })\r\n\r\n        } catch (errror) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <div className=\"pro-container\" >\r\n            < div className=\"clip\" > </div> {images?.length > 0 &&\r\n                <div className=\"image-slider\" > {\r\n                    images.map((d, id) =>\r\n                        <div className=\"box\" key={id}>\r\n                            <img src={d.image} />\r\n                        </div>)\r\n                } </div>\r\n            }\r\n            <div className=\"avatar-box\" > {avatar &&\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                <img src={\r\n                    avatar\r\n                }\r\n                />\r\n            } {\r\n                    !avatar &&\r\n                    <label htmlFor=\"avatarUplade\" >\r\n                        <PersonIcon className=\"noAvatar\"\r\n                            style={\r\n                                {\r\n                                    fontSize: 100\r\n                                }\r\n                            }\r\n                            color=\"primary\" > </PersonIcon> <EditIcon className=\"edit-avatar\"\r\n                                color=\"secondary\" >\r\n                        </EditIcon>\r\n                    </label>\r\n\r\n                } <p color=\"secondary\" > Behroooz </p> <form >\r\n                    < input type=\"file\"\r\n                        className=\"upload-avatar\"\r\n                        id=\"avatarUplade\"\r\n                        onChange={\r\n                            (e) => handleFileInput(e.target.files[0], \"avatar\")\r\n                        }\r\n                    /> </form> </div>\r\n            <div className=\"info\" >\r\n                <div className=\"edit\" >\r\n                    <IconButton className=\"icon-box\" >\r\n                        <SettingsIcon style={\r\n                            {\r\n                                fontSize: 80,\r\n                                color: \"white\"\r\n                            }\r\n                        }\r\n                        />\r\n                    </IconButton>\r\n                    <p color=\"secondary\" > Edit Profile </p> </div>\r\n                <div className=\"upload-image\" >\r\n                    <IconButton className=\"icon-box\"\r\n                        htmlFor=\"imageUpload\" >\r\n                        <label htmlFor=\"imageUpload\"\r\n                            className=\"uplaodBoxHidden\" >\r\n                        </label> <\r\n                            PhotoCameraIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                        /> </IconButton>\r\n                    <p color=\"secondary\" > Upload Image </p>\r\n                    <form >\r\n                        <input type=\"file\"\r\n                            className=\"upload-avatar\"\r\n                            id=\"imageUpload\"\r\n                            onChange={\r\n                                (e) => handleFileInput(e.target.files[0], \"image\")\r\n                            }\r\n                        /> </form>\r\n                </div>\r\n                <div className=\"setting\" >\r\n                    <IconButton className=\"icon-box\" >\r\n                        <EditIcon style={\r\n                            {\r\n                                fontSize: 80,\r\n                                color: \"white\"\r\n                            }\r\n                        }\r\n                        /> </IconButton> <p color=\"secondary\" > Setting </p>\r\n                </div> </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js",["107","108","109","110","111","112"],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Main.css\";\r\nimport Header from \"./Header\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport SwipeButtons from \"./subMain/SwipeButtons\"\r\nimport TinderCards from \"./subMain/TinderCards\"\r\n\r\nconst Main = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return error ? (<\r\n    span className=\"error-message\" > {\r\n      error\r\n    } </span>\r\n  ) : (<div > {\r\n    <>\r\n      <Header />\r\n      <TinderCards />\r\n      <SwipeButtons />\r\n    </>\r\n  } </div>\r\n  );\r\n};\r\n\r\nexport default Main;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.js",["113","114"],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {\r\n  useHistory\r\n} from \"react-router\"\r\nimport \"./LoginScreen.css\";\r\nimport {\r\n  useDispatch\r\n} from \"react-redux\"\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const {\r\n        data\r\n      } = await axios.post(\r\n        \"/api/auth/login\", {\r\n          email,\r\n          password\r\n        },\r\n        config\r\n      );\r\n\r\n      window.localStorage.setItem(\"authToken\", data.token);\r\n      setTimeout(() => {\r\n\r\n        history.push(\"/splash\");\r\n      }, 2000)\r\n\r\n\r\n    } catch (error) {\r\n      setError(error?.response?.data?.error || \"something goes wrong..!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return ( <\r\n    div className = \"login-screen\" >\r\n    <\r\n    form onSubmit = {\r\n      loginHandler\r\n    }\r\n    className = \"login-screen__form\" >\r\n    <\r\n    h3 className = \"login-screen__title\" > Login < /h3> {\r\n    error && < span className = \"error-message\" > {\r\n      error\r\n    } < /span>} <\r\n    div className = \"form-group\" >\r\n    <\r\n    label htmlFor = \"email\" > Email: < /label> <\r\n    input type = \"email\"\r\n    required id = \"email\"\r\n    placeholder = \"Email address\"\r\n    onChange = {\r\n      (e) => setEmail(e.target.value)\r\n    }\r\n    value = {\r\n      email\r\n    }\r\n    tabIndex = {\r\n      1\r\n    }\r\n    /> < /\r\n    div > <\r\n    div className = \"form-group\" >\r\n    <\r\n    label htmlFor = \"password\" >\r\n    Password: {\r\n      \" \"\r\n    } <\r\n    Link to = \"/forgotpassword\"\r\n    className = \"login-screen__forgotpassword\" >\r\n    Forgot Password ?\r\n    <\r\n    /Link> < /\r\n    label > <\r\n    input type = \"password\"\r\n    required id = \"password\"\r\n    autoComplete = \"true\"\r\n    placeholder = \"Enter password\"\r\n    onChange = {\r\n      (e) => setPassword(e.target.value)\r\n    }\r\n    value = {\r\n      password\r\n    }\r\n    tabIndex = {\r\n      2\r\n    }\r\n    /> < /\r\n    div > <\r\n    button type = \"submit\"\r\n    className = \"btn btn-primary\" >\r\n    Login <\r\n    /button>\r\n\r\n    <\r\n    span className = \"login-screen__subtext\" >\r\n    Don 't have an account? <Link to=\"/register\">Register</Link> < /\r\n    span > <\r\n    /form> < /\r\n    div >\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js",["115","116","117"],"import { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Header from \"../screens/Header\";\r\nimport \"./ConversationList.css\"\r\nconst Conversation = () => {\r\n\r\n    const $conversations = useSelector(state => state.Chat.conversations);\r\n    const [conversations, setConversations] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log($conversations)\r\n        setConversations($conversations)\r\n    }, [$conversations])\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"conversations\">\r\n                <div className=\"matchBox\">\r\n                    {\r\n                        [0, 3, 5, 8, 9, 1, 2].map((a, i) => (\r\n                            <div className=\"machedAvatar\" key={i}>\r\n                                <img src=\"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"></img>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <div class=\"chatConvContainer\">\r\n\r\n                    {conversations?.map((c, id) => (\r\n                        <div key={id}>\r\n                            <Link to={`/chat/${c._id}`} className=\"messageBox\">\r\n                                <div className=\"avatar\">\r\n                                    <img src={c.userToInfo?.avatar || \"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"} alt=\"avatar\" />\r\n                                </div>\r\n                                <div className=\"convBox\">\r\n                                    <h3>{c.userToInfo.username}</h3>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Conversation;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js",["118","119","120","121","122"],"import React from 'react'\r\n\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Header from '../screens/Header';\r\nimport \"./Message.css\"\r\nfunction Message() {\r\n    let { conversation_id } = useParams();\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n    //red store messages conv and user \r\n    const user = useSelector(Store => Store.Auth.user)\r\n    const $messages = useSelector(State => State.Chat.message)\r\n    const $conv = useSelector(State => State.Chat.conversations?.filter(d => d._id === conversation_id)[0])\r\n    const dispatch = useDispatch();\r\n    const [messages, setMessage] = useState([])\r\n    const [tempMessage, setTempMessage] = useState(null)\r\n    const [user_to, setUser_to] = useState([])\r\n\r\n    useEffect(() => {\r\n        setUser_to($conv?.conversation_between?.filter(d => d !== user?.user._id)[0] || null)\r\n    }, [])\r\n    useEffect(() => {\r\n        setMessage($messages?.filter(d => d.conversation_id === conversation_id) || [])\r\n\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [$messages])\r\n\r\n    useEffect(() => {\r\n        console.log(\"new message added to store from other user\")\r\n\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages])\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.post(\"/api/chat/sendMessage\", {\r\n            conversation_id: $conv._id,\r\n            user_to: user_to,\r\n            message: tempMessage,\r\n            status: \"UNREAD\"\r\n        }).then((res) => {\r\n\r\n            console.log(res.data.data)\r\n            //push that message in to the store chat\r\n            dispatch({ type: \"ADD_MESSAGE\", payload: res.data.data })\r\n            setTempMessage('')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"chatContainder\">\r\n                <div className=\"MessegesContainer\" > {\r\n\r\n                    messages.map((d, i) => (\r\n\r\n\r\n\r\n                        <div key={i} className={\"messageBox \" + ((d.user_to && d.user_to !== user.user._id) ? \"\" : \"rtlChat\")}>\r\n\r\n                            <div className=\"avatar\" >\r\n                                <img src={$conv.userToInfo.avatar || \"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"} alt=\"avatar\" />\r\n                            </div>\r\n                            <div className=\"convBox\">\r\n                                <p className={((d.user_to && d.user_to !== user.user._id) ? \"recieved\" : \"sent\")}>{d.message}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ))}\r\n                    <div ref={scrollRef} />\r\n                </div>\r\n                <div className=\"textInputBox\">\r\n                    < form onSubmit={(e) => submitForm(e)} className=\"chat-form\">\r\n                        < input value={tempMessage || \"\"} className=\"chat-input\"\r\n                            onChange={(e) => { setTempMessage(e.target.value) }} />\r\n                        < input type=\"submit\" className=\"chat-button\" value=\"Submit\" /> </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js",["123","124"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js",["125","126"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js",["127"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"136","line":13,"column":8,"nodeType":"134","messageId":"135","endLine":13,"endColumn":22},{"ruleId":"132","severity":1,"message":"137","line":26,"column":3,"nodeType":"134","messageId":"135","endLine":26,"endColumn":9},{"ruleId":"132","severity":1,"message":"138","line":28,"column":3,"nodeType":"134","messageId":"135","endLine":28,"endColumn":12},{"ruleId":"132","severity":1,"message":"139","line":31,"column":3,"nodeType":"134","messageId":"135","endLine":31,"endColumn":5},{"ruleId":"132","severity":1,"message":"140","line":39,"column":3,"nodeType":"134","messageId":"135","endLine":39,"endColumn":7},{"ruleId":"128","replacedBy":"141"},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","severity":1,"message":"143","line":23,"column":12,"nodeType":"134","messageId":"135","endLine":23,"endColumn":25},{"ruleId":"132","severity":1,"message":"144","line":24,"column":12,"nodeType":"134","messageId":"135","endLine":24,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":89,"column":29,"nodeType":"147","endLine":89,"endColumn":50},{"ruleId":"132","severity":1,"message":"138","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":13,"column":17,"nodeType":"134","messageId":"135","endLine":13,"endColumn":25},{"ruleId":"132","severity":1,"message":"149","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":21},{"ruleId":"132","severity":1,"message":"150","line":14,"column":23,"nodeType":"134","messageId":"135","endLine":14,"endColumn":37},{"ruleId":"132","severity":1,"message":"151","line":15,"column":9,"nodeType":"134","messageId":"135","endLine":15,"endColumn":17},{"ruleId":"132","severity":1,"message":"138","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"151","line":21,"column":9,"nodeType":"134","messageId":"135","endLine":21,"endColumn":17},{"ruleId":"132","severity":1,"message":"152","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"153","line":6,"column":5,"nodeType":"134","messageId":"135","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":28,"column":33,"nodeType":"147","endLine":28,"endColumn":106},{"ruleId":"132","severity":1,"message":"139","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":12},{"ruleId":"132","severity":1,"message":"154","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"155","line":12,"column":11,"nodeType":"134","messageId":"135","endLine":12,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":25,"column":8,"nodeType":"158","endLine":25,"endColumn":10,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":30,"column":8,"nodeType":"158","endLine":30,"endColumn":19,"suggestions":"161"},{"ruleId":"132","severity":1,"message":"162","line":5,"column":5,"nodeType":"134","messageId":"135","endLine":5,"endColumn":12},{"ruleId":"132","severity":1,"message":"151","line":15,"column":11,"nodeType":"134","messageId":"135","endLine":15,"endColumn":19},{"ruleId":"132","severity":1,"message":"163","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"132","severity":1,"message":"164","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},{"ruleId":"156","severity":1,"message":"165","line":117,"column":8,"nodeType":"158","endLine":117,"endColumn":10,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'RegisterScreen' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'Chat' is defined but never used.",["167"],["168"],"'avatarLoading' is assigned a value but never used.","'avatarError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setError' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '$conv?.conversation_between' and 'user?.user._id'. Either include them or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'conversation_id'. Either include it or remove the dependency array.",["170"],"'useMemo' is defined but never used.","'ReplayIcon' is defined but never used.","'StarIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth?.user._id', 'dispatch', and 'history'. Either include them or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [$conv?.conversation_between, user?.user._id]",{"range":"178","text":"179"},"Update the dependencies array to be: [$messages, conversation_id]",{"range":"180","text":"181"},"Update the dependencies array to be: [Auth?.user._id, dispatch, history]",{"range":"182","text":"183"},[1043,1045],"[$conv?.conversation_between, user?.user._id]",[1237,1248],"[$messages, conversation_id]",[2902,2904],"[Auth?.user._id, dispatch, history]"]