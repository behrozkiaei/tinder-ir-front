[{"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js":"1","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js":"2","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.js":"3","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js":"4","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\routing\\PrivateRoute.js":"5","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js":"6","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js":"7","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js":"8","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js":"9","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js":"10","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js":"11","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js":"12","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js":"13","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.js":"14","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js":"15","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js":"16","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js":"17","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js":"18","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js":"19","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js":"20","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js":"21","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\profile\\EditPro.js":"22","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\user.js":"23","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\setting\\Setting.js":"24","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorker.js":"25","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorkerRegistration.js":"26"},{"size":1264,"mtime":1632499238153,"results":"27","hashOfConfig":"28"},{"size":364,"mtime":1632484895838,"results":"29","hashOfConfig":"28"},{"size":3018,"mtime":1632505014531,"results":"30","hashOfConfig":"28"},{"size":638,"mtime":1631899569363,"results":"31","hashOfConfig":"28"},{"size":389,"mtime":1631081410811,"results":"32","hashOfConfig":"33"},{"size":2658,"mtime":1631081410814,"results":"34","hashOfConfig":"28"},{"size":6127,"mtime":1632475922630,"results":"35","hashOfConfig":"28"},{"size":1225,"mtime":1631899569344,"results":"36","hashOfConfig":"28"},{"size":1908,"mtime":1631081410812,"results":"37","hashOfConfig":"28"},{"size":3287,"mtime":1631081410813,"results":"38","hashOfConfig":"28"},{"size":1595,"mtime":1632477172995,"results":"39","hashOfConfig":"28"},{"size":889,"mtime":1632476509560,"results":"40","hashOfConfig":"28"},{"size":1489,"mtime":1631899569362,"results":"41","hashOfConfig":"28"},{"size":2638,"mtime":1631899569271,"results":"42","hashOfConfig":"28"},{"size":1924,"mtime":1631899569268,"results":"43","hashOfConfig":"28"},{"size":4333,"mtime":1632513779843,"results":"44","hashOfConfig":"28"},{"size":2158,"mtime":1632513025008,"results":"45","hashOfConfig":"28"},{"size":2271,"mtime":1631899569307,"results":"46","hashOfConfig":"28"},{"size":1168,"mtime":1632480412378,"results":"47","hashOfConfig":"28"},{"size":29522,"mtime":1632505029449,"results":"48","hashOfConfig":"28"},{"size":549,"mtime":1631899569362,"results":"49","hashOfConfig":"28"},{"size":2782,"mtime":1632476996704,"results":"50","hashOfConfig":"28"},{"size":622,"mtime":1632513566070,"results":"51","hashOfConfig":"28"},{"size":617,"mtime":1632478882212,"results":"52","hashOfConfig":"28"},{"size":5867,"mtime":1632483542083,"results":"53","hashOfConfig":"54"},{"size":5064,"mtime":1632484895838,"results":"55","hashOfConfig":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1t3vsg3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"ya3quj",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f27o2b",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\index.js",[],["118","119"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\reportWebVitals.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\App.js",["120","121","122","123","124","125","126"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\store.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\routing\\PrivateRoute.js",[],["127","128"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Profile.js",["129","130","131"],"import \"./css/Profile.css\"\r\nimport Header from \"./Header\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport {\r\n    IconButton\r\n} from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport {\r\n    useState,\r\n    useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from \"react-redux\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [avatarLoading, setAvatarLoader] = useState(null)\r\n    const [avatarError, setAvatarError] = useState(null)\r\n    const Auth = useSelector(state => state.Auth.user);\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n    const [images, setImages] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!Auth.user) {\r\n            console.log(\"Auth is undefined\")\r\n        }\r\n\r\n\r\n        setAvatar(Auth?.user?.avatar)\r\n        setImages(Auth?.Images)\r\n    }, [Auth])\r\n\r\n\r\n    useEffect(() => { }, [avatar, images])\r\n    const handleFileInput = async (fileUploaded, type = \"avatar\") => {\r\n        setAvatarLoader(true)\r\n        console.log(fileUploaded)\r\n\r\n        if (fileUploaded.size > 2024000) {\r\n            setAvatarError(\"File size cannot exceed more than 1MB\");\r\n            setAvatarLoader(false)\r\n            return false;\r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", fileUploaded);\r\n        formData.append(\"type\", type);\r\n        axios.post(\"/api/upload\", formData).then((res) => {\r\n            updateUserInfo()\r\n        }).catch(e => {\r\n            setAvatarError(e.response?.data?.error || \"Network Erro\");\r\n            setTimeout(() => {\r\n                setAvatarError(\"\");\r\n            }, 5000);\r\n\r\n        }).finally(() => {\r\n            setAvatarLoader(false)\r\n        });\r\n\r\n    }\r\n\r\n    const updateUserInfo = async () => {\r\n        try {\r\n\r\n            const res = await axios.get(\"/api/tinder/getUserInfo\")\r\n            console.log(res?.data?.data)\r\n            dispatch({\r\n                type: \"LOGIN_SUCCESS\",\r\n                payload: res?.data?.data\r\n            })\r\n\r\n        } catch (errror) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        <Header />\r\n        <div className=\"pro-container\" >\r\n            < div className=\"clip\" > </div> {images?.length > 0 &&\r\n                <div className=\"image-slider\" > {\r\n                    images.map((d, id) =>\r\n                        <div className=\"box\" key={id}>\r\n                            <img src={d.image} />\r\n                        </div>)\r\n                } </div>\r\n            }\r\n            <div className=\"avatar-box\" > {avatar &&\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                <img src={\r\n                    avatar\r\n                }\r\n                />\r\n            } {\r\n                    !avatar &&\r\n                    <label htmlFor=\"avatarUplade\" >\r\n                        <PersonIcon className=\"noAvatar\"\r\n                            style={\r\n                                {\r\n                                    fontSize: 100\r\n                                }\r\n                            }\r\n                            color=\"primary\" > </PersonIcon> <EditIcon className=\"edit-avatar\"\r\n                                color=\"secondary\" >\r\n                        </EditIcon>\r\n                    </label>\r\n\r\n                } <p color=\"secondary\" > Behroooz </p> <form >\r\n                    < input type=\"file\"\r\n                        className=\"upload-avatar\"\r\n                        id=\"avatarUplade\"\r\n                        onChange={\r\n                            (e) => handleFileInput(e.target.files[0], \"avatar\")\r\n                        }\r\n                    /> </form> </div>\r\n            <div className=\"info\" >\r\n                <div className=\"edit\" >\r\n                    <Link to=\"/setting\">\r\n                        <IconButton className=\"icon-box\" >\r\n                            <SettingsIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                    <p color=\"secondary\" >Setting</p> </div>\r\n                <div className=\"upload-image\" >\r\n\r\n                    <IconButton className=\"icon-box\"\r\n                        htmlFor=\"imageUpload\" >\r\n                        <label htmlFor=\"imageUpload\"\r\n                            className=\"uplaodBoxHidden\" >\r\n                        </label> <\r\n                            PhotoCameraIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                        /> </IconButton>\r\n                    <p color=\"secondary\" > Upload Image </p>\r\n                    <form >\r\n                        <input type=\"file\"\r\n                            className=\"upload-avatar\"\r\n                            id=\"imageUpload\"\r\n                            onChange={\r\n                                (e) => handleFileInput(e.target.files[0], \"image\")\r\n                            }\r\n                        /> </form>\r\n                </div>\r\n                <div className=\"setting\" >\r\n                    <Link to=\"/editpro\">\r\n                        <IconButton className=\"icon-box\" >\r\n                            <EditIcon style={\r\n                                {\r\n                                    fontSize: 80,\r\n                                    color: \"white\"\r\n                                }\r\n                            }\r\n                            /> </IconButton> <p color=\"secondary\" >Edit Profile</p>\r\n                    </Link>\r\n                </div> </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\interceptor\\interceptor.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\RegisterScreen.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Main.js",["132","133","134","135","136"],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Main.css\";\r\nimport Header from \"./Header\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport SwipeButtons from \"./subMain/SwipeButtons\"\r\nimport TinderCards from \"./subMain/TinderCards\"\r\n\r\n\r\nconst Main = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector(state => state.Auth.user);\r\n  useEffect(() => {\r\n\r\n    if (!Auth?.user) {\r\n      dispatch({\r\n        type: \"LOGOUT\"\r\n      })\r\n      window.location.reload();\r\n    }\r\n  }, [])\r\n\r\n\r\n  return error ? (<\r\n    span className=\"error-message\" > {\r\n      error\r\n    } </span>\r\n  ) : (<div > {\r\n    <>\r\n      <Header />\r\n      <TinderCards />\r\n      <SwipeButtons />\r\n    </>\r\n  } </div>\r\n  );\r\n};\r\n\r\nexport default Main;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\ChatReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\LoginScreen.js",["137","138"],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {\r\n  useHistory\r\n} from \"react-router\"\r\nimport \"./LoginScreen.css\";\r\nimport {\r\n  useDispatch\r\n} from \"react-redux\"\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const {\r\n        data\r\n      } = await axios.post(\r\n        \"/api/auth/login\", {\r\n          email,\r\n          password\r\n        },\r\n        config\r\n      );\r\n\r\n      window.localStorage.setItem(\"authToken\", data.token);\r\n      setTimeout(() => {\r\n\r\n        history.push(\"/splash\");\r\n      }, 2000)\r\n\r\n\r\n    } catch (error) {\r\n      setError(error?.response?.data?.error || \"something goes wrong..!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return ( <\r\n    div className = \"login-screen\" >\r\n    <\r\n    form onSubmit = {\r\n      loginHandler\r\n    }\r\n    className = \"login-screen__form\" >\r\n    <\r\n    h3 className = \"login-screen__title\" > Login < /h3> {\r\n    error && < span className = \"error-message\" > {\r\n      error\r\n    } < /span>} <\r\n    div className = \"form-group\" >\r\n    <\r\n    label htmlFor = \"email\" > Email: < /label> <\r\n    input type = \"email\"\r\n    required id = \"email\"\r\n    placeholder = \"Email address\"\r\n    onChange = {\r\n      (e) => setEmail(e.target.value)\r\n    }\r\n    value = {\r\n      email\r\n    }\r\n    tabIndex = {\r\n      1\r\n    }\r\n    /> < /\r\n    div > <\r\n    div className = \"form-group\" >\r\n    <\r\n    label htmlFor = \"password\" >\r\n    Password: {\r\n      \" \"\r\n    } <\r\n    Link to = \"/forgotpassword\"\r\n    className = \"login-screen__forgotpassword\" >\r\n    Forgot Password ?\r\n    <\r\n    /Link> < /\r\n    label > <\r\n    input type = \"password\"\r\n    required id = \"password\"\r\n    autoComplete = \"true\"\r\n    placeholder = \"Enter password\"\r\n    onChange = {\r\n      (e) => setPassword(e.target.value)\r\n    }\r\n    value = {\r\n      password\r\n    }\r\n    tabIndex = {\r\n      2\r\n    }\r\n    /> < /\r\n    div > <\r\n    button type = \"submit\"\r\n    className = \"btn btn-primary\" >\r\n    Login <\r\n    /button>\r\n\r\n    <\r\n    span className = \"login-screen__subtext\" >\r\n    Don 't have an account? <Link to=\"/register\">Register</Link> < /\r\n    span > <\r\n    /form> < /\r\n    div >\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\ConversationList.js",["139","140","141"],"import { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Header from \"../screens/Header\";\r\nimport \"./ConversationList.css\"\r\nconst Conversation = () => {\r\n\r\n    const $conversations = useSelector(state => state.Chat.conversations);\r\n    const [conversations, setConversations] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log($conversations)\r\n        setConversations($conversations)\r\n    }, [$conversations])\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"conversations\">\r\n                <div className=\"matchBox\">\r\n                    {\r\n                        [0, 3, 5, 8, 9, 1, 2].map((a, i) => (\r\n                            <div className=\"machedAvatar\" key={i}>\r\n                                <img src=\"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"></img>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <div class=\"chatConvContainer\">\r\n\r\n                    {conversations?.map((c, id) => (\r\n                        <div key={id}>\r\n                            <Link to={`/chat/${c._id}`} className=\"messageBox\">\r\n                                <div className=\"avatar\">\r\n                                    <img src={c.userToInfo?.avatar || \"https://tinder.s3.ir-thr-at1.arvanstorage.com/person-icon.png\"} alt=\"avatar\" />\r\n                                </div>\r\n                                <div className=\"convBox\">\r\n                                    <h3>{c.userToInfo.username}</h3>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Conversation;","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\chat\\Message.js",["142","143","144","145","146","147"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\Header.js",["148"],"import React from 'react'\r\nimport './css/Header.css'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport { IconButton } from '@material-ui/core'\r\nimport ForumIcon from '@material-ui/icons/Forum'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\"\r\nfunction Header({ backButton }) {\r\n\r\n    const $messages = useSelector(state => state.Chat?.message)\r\n    const [newMessage, setNewMessage] = useState(null)\r\n    console.log($messages)\r\n    const user = useSelector(Store => Store.Auth?.user)\r\n    useEffect(() => {\r\n\r\n        setNewMessage(false)\r\n        $messages?.some((d) => {\r\n            console.log(d)\r\n            if (d.status === \"UNREAD\" && d.user_to === user.user._id) {\r\n                setNewMessage(true)\r\n                // console.log(\"you have new message\")\r\n\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n        )\r\n    }, [$messages])\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className='header'>\r\n            {backButton ? (\r\n                <IconButton onClick={() => history.replace(backButton)}>\r\n                    <ArrowBackIosIcon fontSize='large' className='header__icon' />\r\n                </IconButton>\r\n            ) : (\r\n                <Link to='/profile'>\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                </Link>\r\n            )}\r\n\r\n            <Link to='/'>\r\n                <img\r\n                    className='header__logo'\r\n                    src='/tinder.png'\r\n                    alt='tinderLogo'\r\n                />\r\n            </Link>\r\n\r\n            <Link to='/conversations' className=\"head-message\">\r\n                {newMessage &&\r\n\r\n                    <span className=\"newMessage\">&#8226;</span>\r\n                }\r\n                <IconButton>\r\n                    <ForumIcon fontSize='large' />\r\n                </IconButton>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\TinderCards.js",["149","150"],"import React, {\r\n    useEffect,\r\n    useState,\r\n    useRef,\r\n    useMemo\r\n} from 'react'\r\nimport TinderCard from 'react-tinder-card'\r\nimport axios from \"axios\"\r\nimport './css/TinderCards.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nfunction TinderCards({ person }) {\r\n\r\n    const $cards = useSelector(state => state.Cards)\r\n    const [people, setPeople] = useState(person)\r\n    const dispatch = useDispatch();\r\n    const swiperef = useRef();\r\n    useEffect(() => {\r\n        setPeople($cards.cards || [])\r\n    }, [$cards])\r\n\r\n    const swiped = (direction, user_to) => {\r\n\r\n        if (direction === \"right\") {\r\n            axios.post(\"/api/tinder/userLikedOrDisliked\", {\r\n                user_id_to: user_to,\r\n                behavior: (direction === \"right\") ? \"LIKE\" : \"DISLIKE\"\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    const outOfFrame = (name) => {\r\n        console.log(name + ' left the screen!')\r\n    }\r\n\r\n    const swipe = (dir) => {\r\n        // swiperef[0].current.swipe(dir) // Swipe the card!\r\n    }\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            swipe(\"left\")\r\n        }, 5000)\r\n    })\r\n    return (<>\r\n        <div className='tinderCards' >\r\n            <div className='tinderCards__cardContainer' > {\r\n                people && people.map((person, index) => (<TinderCard className='tinderCards__swipe' ref={swiperef[index]}\r\n                    key={\r\n                        person._id\r\n                    }\r\n\r\n                    preventSwipe={\r\n                        ['up', 'down']\r\n                    }\r\n                    onSwipe={\r\n                        (dir) => swiped(dir, person._id)\r\n                    }\r\n                    onCardLeftScreen={\r\n                        () => outOfFrame(person._id)\r\n                    } >\r\n                    < div className='tinderCards__card'\r\n                        style={\r\n                            {\r\n                                backgroundImage: `url(${person.avatar})`\r\n                            }\r\n                        } >\r\n                        <h3 > {\r\n                            person.username\r\n                        } </h3> </div> </TinderCard>\r\n                ))\r\n            } </div> </div> </>\r\n    )\r\n}\r\n\r\nexport default TinderCards","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\screens\\subMain\\SwipeButtons.js",["151","152"],"\r\nimport { IconButton } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './css/SwipeButtons.css'\r\nimport ReplayIcon from '@material-ui/icons/Replay'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn'\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className='swipeButtons'>\r\n            {/* <IconButton className='swipeButtons__repeat'>\r\n                <ReplayIcon fontSize='large' />\r\n            </IconButton> */}\r\n            <IconButton className='swipeButtons__left'>\r\n                <CloseIcon />\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__lightning'>\r\n                <FlashOnIcon sx={{ fontSize: 60 }} />\r\n            </IconButton>\r\n            <IconButton className='swipeButtons__right'>\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            {/* <IconButton className='swipeButtons__star'>\r\n                <StarIcon fontSize='large' />\r\n            </IconButton> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\splash\\SplashScreen.js",["153"],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\redux\\reducers\\CardsReducer.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\profile\\EditPro.js",["154","155","156"],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\"\r\nimport Header from \"../screens/Header\";\r\nimport \"./EditPro.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { getUserInfo } from \"../../services/user.js\"\r\nfunction EditPro() {\r\n    // const [userName, setstate] = useState(initialState)\r\n    //  const dispatch = useDispatch(function)\r\n    //  useEffect(() => {\r\n    //    return () => {\r\n    //      effect\r\n    //    };\r\n    //  }, [input])\r\n\r\n    const Auth = useSelector(state => state.Auth?.user)\r\n\r\n    const [username, setUserName] = useState(Auth.user?.username || \"\")\r\n    const [age, setAge] = useState(Auth.user?.age || \"\")\r\n    const [gender, setGender] = useState(Auth.user?.gender || \"male\")\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoader] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        setLoader(true)\r\n        axios.post(\"/api/tinder/updateUserInfo\", {\r\n            username: username,\r\n            gender: gender,\r\n            age: age,\r\n            email: Auth.user.email\r\n        }).then(res => {\r\n            getUserInfo(dispatch)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        }).finally(() => {\r\n            setLoader(false)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"editPro\">\r\n                <form className=\"box\" onSubmit={submitForm}>\r\n\r\n                    <label htmlFor=\"\">Username:</label>\r\n                    <input className=\"custom\" value={username || \"\"} onChange={(e) => setUserName(e.target.value)} ></input>\r\n                    <label htmlFor=\"\">Sge:</label>\r\n                    <input className=\"custom\" type=\"mobile\" value={age || \"\"} onChange={(e) => setAge(e.target.value)}></input>\r\n                    <label htmlFor=\"\">Gender:</label>\r\n                    <select className=\"custom\" value={gender || \"male\"} onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"male\">male</option>\r\n                        <option value=\"female\">female</option>\r\n                    </select>\r\n                    {/* <input type=\"submit\" className=\"customBtn\" value=\"Submit\" /> */}\r\n\r\n                    <button className=\"customBtn\" type=\"submit\" disabled={loading}>\r\n                        {loading ? (\r\n                            <CircularProgress color=\"secondary\" size=\"20px\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPro\r\n","D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\services\\user.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\components\\setting\\Setting.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorker.js",[],"D:\\app\\login\\tinder-backend\\tinder-front\\tinder-ir-front\\src\\serviceWorkerRegistration.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":13},{"ruleId":"161","severity":1,"message":"165","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":22},{"ruleId":"161","severity":1,"message":"166","line":26,"column":3,"nodeType":"163","messageId":"164","endLine":26,"endColumn":9},{"ruleId":"161","severity":1,"message":"167","line":28,"column":3,"nodeType":"163","messageId":"164","endLine":28,"endColumn":12},{"ruleId":"161","severity":1,"message":"168","line":31,"column":3,"nodeType":"163","messageId":"164","endLine":31,"endColumn":5},{"ruleId":"161","severity":1,"message":"169","line":39,"column":3,"nodeType":"163","messageId":"164","endLine":39,"endColumn":7},{"ruleId":"161","severity":1,"message":"170","line":43,"column":8,"nodeType":"163","messageId":"164","endLine":43,"endColumn":16},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"161","severity":1,"message":"173","line":24,"column":12,"nodeType":"163","messageId":"164","endLine":24,"endColumn":25},{"ruleId":"161","severity":1,"message":"174","line":25,"column":12,"nodeType":"163","messageId":"164","endLine":25,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":96,"column":29,"nodeType":"177","endLine":96,"endColumn":50},{"ruleId":"161","severity":1,"message":"162","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":13},{"ruleId":"161","severity":1,"message":"178","line":14,"column":17,"nodeType":"163","messageId":"164","endLine":14,"endColumn":25},{"ruleId":"161","severity":1,"message":"179","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":21},{"ruleId":"161","severity":1,"message":"180","line":15,"column":23,"nodeType":"163","messageId":"164","endLine":15,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":26,"column":6,"nodeType":"183","endLine":26,"endColumn":8,"suggestions":"184"},{"ruleId":"161","severity":1,"message":"167","line":3,"column":3,"nodeType":"163","messageId":"164","endLine":3,"endColumn":12},{"ruleId":"161","severity":1,"message":"185","line":21,"column":9,"nodeType":"163","messageId":"164","endLine":21,"endColumn":17},{"ruleId":"161","severity":1,"message":"186","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":21},{"ruleId":"161","severity":1,"message":"187","line":6,"column":5,"nodeType":"163","messageId":"164","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":28,"column":33,"nodeType":"177","endLine":28,"endColumn":106},{"ruleId":"161","severity":1,"message":"168","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":12},{"ruleId":"161","severity":1,"message":"188","line":7,"column":10,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"189","line":15,"column":11,"nodeType":"163","messageId":"164","endLine":15,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":28,"column":8,"nodeType":"183","endLine":28,"endColumn":10,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"192","line":49,"column":8,"nodeType":"183","endLine":49,"endColumn":10,"suggestions":"193"},{"ruleId":"181","severity":1,"message":"194","line":54,"column":8,"nodeType":"183","endLine":54,"endColumn":19,"suggestions":"195"},{"ruleId":"161","severity":1,"message":"186","line":8,"column":23,"nodeType":"163","messageId":"164","endLine":8,"endColumn":34},{"ruleId":"161","severity":1,"message":"196","line":5,"column":5,"nodeType":"163","messageId":"164","endLine":5,"endColumn":12},{"ruleId":"161","severity":1,"message":"185","line":15,"column":11,"nodeType":"163","messageId":"164","endLine":15,"endColumn":19},{"ruleId":"161","severity":1,"message":"197","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"198","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"181","severity":1,"message":"199","line":117,"column":8,"nodeType":"183","endLine":117,"endColumn":10,"suggestions":"200"},{"ruleId":"161","severity":1,"message":"167","line":2,"column":20,"nodeType":"163","messageId":"164","endLine":2,"endColumn":29},{"ruleId":"161","severity":1,"message":"201","line":26,"column":12,"nodeType":"163","messageId":"164","endLine":26,"endColumn":17},{"ruleId":"161","severity":1,"message":"178","line":26,"column":19,"nodeType":"163","messageId":"164","endLine":26,"endColumn":27},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'RegisterScreen' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'Chat' is defined but never used.","'Settings' is defined but never used.",["202"],["203"],"'avatarLoading' is assigned a value but never used.","'avatarError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setError' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Auth?.user' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","React Hook useEffect has missing dependencies: '$conv?.conversation_between' and 'user?.user._id'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: '$messages', 'conversation_id', 'dispatch', and 'user.user._id'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'conversation_id'. Either include it or remove the dependency array.",["207"],"'useMemo' is defined but never used.","'ReplayIcon' is defined but never used.","'StarIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth?.user._id', 'dispatch', and 'history'. Either include them or remove the dependency array.",["208"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [Auth?.user, dispatch]",{"range":"219","text":"220"},"Update the dependencies array to be: [$conv?.conversation_between, user?.user._id]",{"range":"221","text":"222"},"Update the dependencies array to be: [$messages, conversation_id, dispatch, user.user._id]",{"range":"223","text":"224"},"Update the dependencies array to be: [$messages, conversation_id]",{"range":"225","text":"226"},"Update the dependencies array to be: [Auth?.user._id, dispatch, history]",{"range":"227","text":"228"},[648,650],"[Auth?.user, dispatch]",[1191,1193],"[$conv?.conversation_between, user?.user._id]",[1773,1775],"[$messages, conversation_id, dispatch, user.user._id]",[1967,1978],"[$messages, conversation_id]",[2906,2908],"[Auth?.user._id, dispatch, history]"]